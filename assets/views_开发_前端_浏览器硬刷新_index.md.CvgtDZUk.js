import{_ as r,C as e,c as s,o as l,aB as i,G as o}from"./chunks/framework.CuZ66bTI.js";const b=JSON.parse('{"title":"什么是硬刷新？","description":"","frontmatter":{},"headers":[],"relativePath":"views/开发/前端/浏览器硬刷新/index.md","filePath":"views/开发/前端/浏览器硬刷新/index.md","lastUpdated":1753863339000}'),d={name:"views/开发/前端/浏览器硬刷新/index.md"};function c(g,t,h,p,u,_){const a=e("NolebaseGitContributors"),n=e("NolebaseGitChangelog");return l(),s("div",null,[t[0]||(t[0]=i('<h1 id="什么是硬刷新" tabindex="-1"><strong>什么是硬刷新？</strong> <a class="header-anchor" href="#什么是硬刷新" aria-label="Permalink to &quot;**什么是硬刷新？**&quot;">​</a></h1><p>硬刷新是一种强制浏览器 <strong>忽略本地缓存</strong> ， <strong>直接从服务器重新下载所有资源</strong> （HTML、CSS、JS、图片等）的操作。与之相对的是普通刷新（软刷新），后者可能复用缓存中的文件。</p><hr><h2 id="_1-如何执行硬刷新" tabindex="-1"><strong>1. 如何执行硬刷新？</strong> <a class="header-anchor" href="#_1-如何执行硬刷新" aria-label="Permalink to &quot;**1. 如何执行硬刷新？**&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>不同操作系统和浏览器的快捷键如下：</p><p><strong>表格</strong>复制</p><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>操作系统</strong></th><th style="text-align:left;"><strong>快捷键</strong></th><th style="text-align:left;"><strong>右键菜单选项</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>Windows</strong></td><td style="text-align:left;"><code>Ctrl + F5</code> 或 <code>Ctrl + Shift + R</code></td><td style="text-align:left;">按 <code>F12</code>打开开发者工具 → 右键刷新图标 → 选择“清空缓存并硬性重新加载”</td></tr><tr><td style="text-align:left;"><strong>macOS</strong></td><td style="text-align:left;"><code>Cmd + Shift + R</code></td><td style="text-align:left;">同上（需先打开开发者工具）</td></tr><tr><td style="text-align:left;"><strong>Linux</strong></td><td style="text-align:left;"><code>Ctrl + F5</code> 或 <code>Ctrl + Shift + R</code></td><td style="text-align:left;">同上</td></tr></tbody></table><p><strong>移动端</strong> ：通常需通过开发者选项（如 Android 的 <code>chrome://inspect</code>）或清除应用缓存实现。</p><hr><h2 id="_2-硬刷新的作用" tabindex="-1"><strong>2. 硬刷新的作用</strong> <a class="header-anchor" href="#_2-硬刷新的作用" aria-label="Permalink to &quot;**2. 硬刷新的作用**&quot;">​</a></h2><ul><li><strong>清除缓存问题</strong> ：解决因旧版本 CSS/JS 导致的页面样式错乱或功能异常。</li><li><strong>强制更新资源</strong> ：确保获取服务器最新文件（如更新后的图标、脚本）。</li><li><strong>调试开发</strong> ：开发者调试时避免缓存干扰，确保看到最新修改效果。</li></ul><hr><h2 id="_3-与-清空缓存-的区别" tabindex="-1"><strong>3. 与“清空缓存”的区别</strong> <a class="header-anchor" href="#_3-与-清空缓存-的区别" aria-label="Permalink to &quot;**3. 与“清空缓存”的区别**&quot;">​</a></h2><ul><li><strong>硬刷新</strong> ：仅对当前页面生效，不删除全局缓存。</li><li><strong>清空缓存</strong> （如 <code>Ctrl + Shift + Delete</code>）：会删除所有网站的缓存数据，可能影响其他页面加载速度。</li></ul><hr><h2 id="_4-技术原理" tabindex="-1"><strong>4. 技术原理</strong> <a class="header-anchor" href="#_4-技术原理" aria-label="Permalink to &quot;**4. 技术原理**&quot;">​</a></h2><p>通过 HTTP 请求头控制：</p><ul><li><strong>硬刷新</strong> ：浏览器发送 <code>Cache-Control: no-cache</code>和 <code>Pragma: no-cache</code>，强制服务器返回最新内容。</li><li><strong>普通刷新</strong> ：可能使用 <code>If-Modified-Since</code>或 <code>ETag</code>，若服务器返回 <code>304 Not Modified</code>，则复用缓存。</li></ul><hr><h2 id="_5-何时使用" tabindex="-1"><strong>5. 何时使用？</strong> <a class="header-anchor" href="#_5-何时使用" aria-label="Permalink to &quot;**5. 何时使用？**&quot;">​</a></h2><ul><li><p>网站更新后显示异常。</p></li><li><p>开发测试时确认资源是否最新。</p></li><li><p>遇到“缓存投毒”等缓存相关问题时。</p><p><strong>提示</strong> ：若硬刷新无效，可尝试 <strong>无痕模式</strong> （无缓存）或手动清除浏览器缓存。</p></li></ul>',22)),o(a),o(n)])}const m=r(d,[["render",c]]);export{b as __pageData,m as default};
